- name: Deploy Docker Compose App
  hosts: servers
  remote_user: cnimmo
  become: true # Run tasks as sudo
  tasks:
    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker repository
      shell: |
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Ensure Docker service is running
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create directory for Docker Compose
      file:
        path: "/home/cnimmo/gourmet"
        state: directory

    - name: Synchronize the repository to the remote machine
      synchronize:
        src: "./"
        dest: "/home/cnimmo/gourmet/"
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=.env"
          - "--exclude=inventory.ini"

    - name: Authenticate with GitHub Container Registry
      docker_login:
        registry: ghcr.io
        username: "{{ lookup('env', 'GITHUB_USER') }}"
        password: "{{ lookup('env', 'GITHUB_TOKEN') }}"

    - name: Pull latest images
      shell: |
        cd /home/cnimmo/gourmet
        docker compose -f docker-compose.yml -f docker-compose.prod.yml pull

    - name: Restart Docker Compose
      shell: |
        set -e
        cd /home/cnimmo/gourmet
        CLERK_SECRET_KEY={{ lookup('env', 'CLERK_SECRET_KEY') }} POSTGRES_PASSWORD={{ lookup('env', 'POSTGRES_PASSWORD') }} docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans
        docker image prune -f
